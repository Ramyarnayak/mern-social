{"ast":null,"code":"var _jsxFileName = \"/Users/ramya/Desktop/mern-social/client/src/components/conversations/Conversation.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./conversation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversation({\n  conversation,\n  currentUser\n}) {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  useEffect(() => {\n    const friendId = conversation.member.find(m => m !== currentUser._id);\n\n    const getUser = async () => {\n      try {\n        const res = await axios.get(\"/users?userId=\" + friendId);\n        setUser(res.data);\n        alert(\"ss\");\n        console.log(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getUser();\n  }, [currentUser, conversation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"conversationImg\",\n      src: (user === null || user === void 0 ? void 0 : user.profilePicture) ? PF + user.profilePicture : PF + \"person/noAvatar.png\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"conversationName\",\n      children: user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Conversation, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n\n_c = Conversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"sources":["/Users/ramya/Desktop/mern-social/client/src/components/conversations/Conversation.jsx"],"names":["axios","useEffect","useState","Conversation","conversation","currentUser","user","setUser","PF","process","env","REACT_APP_PUBLIC_FOLDER","friendId","member","find","m","_id","getUser","res","get","data","alert","console","log","error","profilePicture","username"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,oBAAP;;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAtB,EAAqD;AAAA;;AAClE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMM,EAAE,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAvB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAER,YAAY,CAACS,MAAb,CAAoBC,IAApB,CAA0BC,CAAD,IAAKA,CAAC,KAAKV,WAAW,CAACW,GAAhD,CAAhB;;AACA,UAAMC,OAAO,GAAG,YAAU;AACxB,UAAI;AACF,cAAMC,GAAG,GAAE,MAAMlB,KAAK,CAACmB,GAAN,CAAU,mBAAiBP,QAA3B,CAAjB;AACAL,QAAAA,OAAO,CAACW,GAAG,CAACE,IAAL,CAAP;AACAC,QAAAA,KAAK,CAAC,IAAD,CAAL;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACE,IAAhB;AACD,OALD,CAMC,OAAOI,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA;AACF,KAVD;;AAWFP,IAAAA,OAAO;AACN,GAdQ,EAcN,CAACZ,WAAD,EAAcD,YAAd,CAdM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,GAAG,EACD,CAAAE,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEmB,cAAN,IACIjB,EAAE,GAAGF,IAAI,CAACmB,cADd,GAEIjB,EAAE,GAAG,qBALb;AAQE,MAAA,GAAG,EAAC;AARN;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA,gBAAoCF,IAAI,CAACoB;AAAzC;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAnCuBvB,Y;;KAAAA,Y","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./conversation.css\";\n\nexport default function Conversation({ conversation, currentUser }) {\n  const [user, setUser] = useState(null);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n\n  useEffect(() => {\n    const friendId= conversation.member.find((m)=>m !== currentUser._id)\n    const getUser = async ()=>{\n      try {\n        const res= await axios.get(\"/users?userId=\"+friendId)\n        setUser(res.data)\n        alert(\"ss\")\n        console.log(res.data)\n      }\n       catch (error) {\n       console.log(error) \n      }\n    }\n  getUser();\n  }, [currentUser, conversation]);\n\n  return (\n    <div className=\"conversation\">\n      <img\n        className=\"conversationImg\"\n        src={\n          user?.profilePicture\n            ? PF + user.profilePicture\n            : PF + \"person/noAvatar.png\"\n        }\n     \n        alt=\"\"\n      />\n      <span className=\"conversationName\">{user.username}</span>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}