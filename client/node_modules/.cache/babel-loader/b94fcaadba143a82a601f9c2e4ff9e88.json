{"ast":null,"code":"var _jsxFileName = \"/Users/ramya/Desktop/mern-social/client/src/pages/messenger/Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./messenger.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"./../../components/conversations/Conversation\";\nimport Message from './../../components/message/Message';\nimport ChatOnline from './../../components/chatOnline/ChatOnline';\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessages, setNewMessages] = useState(\"\");\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"/conversations/\" + user._id);\n        setConversations(res.data);\n        console.log(\"conversations: \" + res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [user._id]); //  useEffect(() => {\n  //   const getMessages = async () => {\n  //     try{\n  //       const res = await axios.get(\"/messages/\" + currentChat?._id)\n  //     setMessages(res.data)\n  //     }catch(err){\n  //  console.log(err)\n  //     }\n  //   }\n  // getMessages()\n  //  }, [currentChat._id])\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessages,\n      conversationId: currentChat._id\n    };\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages(...messages, res.data);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 1\n          }, this), conversations.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setCurrentChat(c);\n            },\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: c,\n              currentUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.sender === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessages(e.target.value),\n                value: newMessages\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a conversation to start a chat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"mhAwwW+zl72UWQdsCtQYwjzHlUc=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["/Users/ramya/Desktop/mern-social/client/src/pages/messenger/Messenger.jsx"],"names":["React","useState","useEffect","axios","Topbar","Conversation","Message","ChatOnline","useContext","AuthContext","Messenger","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessages","setNewMessages","user","getConversations","res","get","_id","data","console","log","err","handleSubmit","e","preventDefault","message","sender","text","conversationId","post","map","c","m","target","value"],"mappings":"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","sourcesContent":["import \"./messenger.css\";\nimport React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"./../../components/conversations/Conversation\"\nimport Message from './../../components/message/Message'\nimport ChatOnline from  './../../components/chatOnline/ChatOnline'\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\n  export default function Messenger() {\n    const [conversations,setConversations] = useState([])\n    const [currentChat,setCurrentChat] = useState(null)\n    const [messages,setMessages] = useState([])\n    const [newMessages, setNewMessages] = useState(\"\");\n\n\n    const {user} = useContext(AuthContext);\n\n     useEffect(() => {\n      const getConversations = async () => {\n        try{\n          const res = await axios.get(\"/conversations/\" + user._id)\n        setConversations(res.data)\n        console.log(\"conversations: \"+ res.data)\n        }catch(err){\n     console.log(err)\n        }\n       \n      }\n    getConversations()\n     }, [user._id])\n\n\n    //  useEffect(() => {\n    //   const getMessages = async () => {\n    //     try{\n    //       const res = await axios.get(\"/messages/\" + currentChat?._id)\n    //     setMessages(res.data)\n    //     }catch(err){\n    //  console.log(err)\n    //     }\n    //   }\n    // getMessages()\n    //  }, [currentChat._id])\n\n    \n\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  const message = {\n    sender : user._id,\n    text: newMessages,\n    conversationId : currentChat._id\n\n  }\n  try{\n   const res = await axios.post(\"/messages\", message);\n   setMessages(...messages, res.data)\n  } catch(err){\n      \n  }\n\n}\n\n\n    return (\n      <>\n      <Topbar/>\n      <div className=\"messenger\">\n        <div className=\"chatMenu\">\n          <div className=\"chatMenuWrapper\">\n<input placeholder=\"search for friends\" className=\"chatMenuInput\"/>\n          \n          {conversations.map((c)=>(\n            <div\n             onClick={()=>{setCurrentChat(c)}}\n             >\n          <Conversation conversation={c} currentUser={user}/>\n          </div>))  \n          }\n          </div>\n\n        </div>\n        <div className=\"chatBox\">\n          <div className=\"chatBoxWrapper\">\n          {currentChat ? (\n              <>\n                <div className=\"chatBoxTop\">\n                  {messages.map((m) => (\n                    <div >\n                      <Message message={m} own={m.sender === user._id} />\n                    </div>\n                  ))}\n                </div>\n                <div className=\"chatBoxBottom\">\n                  <textarea\n                    className=\"chatMessageInput\"\n                    placeholder=\"write something...\"\n                    onChange={(e) => setNewMessages(e.target.value)}\n                    value={newMessages}\n                  ></textarea>\n                  <button className=\"chatSubmitButton\" onClick={handleSubmit}>\n                    Send\n                  </button>\n                </div>\n              </>\n            ) : (\n              <span className=\"noConversationText\">\n                Open a conversation to start a chat.\n              </span>\n            )}\n       \n          </div>\n        </div>\n\n        <div className=\"chatOnline\">\n          <div className=\"chatOnlineWrapper\">\n<ChatOnline/>\n          </div>\n        </div>\n      </div>\n      \n      </>\n    )\n  }\n  \n\n"]},"metadata":{},"sourceType":"module"}