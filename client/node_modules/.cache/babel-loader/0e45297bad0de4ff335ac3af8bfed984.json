{"ast":null,"code":"var _jsxFileName = \"/Users/ramya/Desktop/mern-social/client/src/pages/messenger/Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversations/Conversation\";\nimport Message from \"../../components/message/Message\";\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const socket = useRef();\n  const {\n    user\n  } = useContext(AuthContext);\n  const scrollRef = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      alert(\"insode io\");\n      socket.emit(\"greetings\", \"Hey!\", {\n        \"ms\": \"jane\"\n      }, Buffer.from([4, 3, 3, 1])); // handle the event sent with socket.send()\n\n      socket.on(\"message\", data => {\n        console.log(data);\n      });\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n      console.log(data);\n    });\n  }, [user._id]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", users => {\n      setOnlineUsers( // alert(user.followers)\n      user.followers.filter(f => users.some(u => u.userId === f)));\n    });\n  }, [user]);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"/conversations/\" + user._id);\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [user._id]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    console.log(user._id);\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage // conversationId: currentChat._id,\n\n    };\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: !currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.sender === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a conversation to start a chat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {\n            onlineUsers: onlineUsers,\n            currentId: user._id,\n            setCurrentChat: setCurrentChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"ZsTedrzfO3E5nl5wYEaQ0Dos7VY=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["/Users/ramya/Desktop/mern-social/client/src/pages/messenger/Messenger.jsx"],"names":["Topbar","Conversation","Message","ChatOnline","useContext","useEffect","useRef","useState","AuthContext","axios","io","Messenger","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","socket","user","scrollRef","current","on","data","alert","emit","Buffer","from","console","log","sender","senderId","text","createdAt","Date","now","_id","users","followers","filter","f","some","u","userId","getConversations","res","get","err","getMessages","handleSubmit","e","preventDefault","message","receiverId","members","find","member","post","scrollIntoView","behavior","map","m","target","value"],"mappings":"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","sourcesContent":["import \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversations/Conversation\";\nimport Message from \"../../components/message/Message\";\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\n\nexport default function Messenger() {\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const socket = useRef();\n  const { user } = useContext(AuthContext);\n  const scrollRef = useRef();\n\n  useEffect(() => {\n\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", (data) => {\n      alert(\"insode io\")\n      socket.emit(\"greetings\", \"Hey!\", { \"ms\": \"jane\" }, Buffer.from([4, 3, 3, 1]));\n       // handle the event sent with socket.send()\n  socket.on(\"message\", (data) => {\n    console.log(data);\n  });\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now(),\n      });\n      console.log(data)\n    });\n  }, [user._id]);\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", (users) => {\n    \n      setOnlineUsers(\n        // alert(user.followers)\n       user.followers.filter((f) => users.some((u) => u.userId === f))\n      );\n\n    });\n  }, [user]);\n\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"/conversations/\" + user._id);\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getConversations();\n  }, [user._id]);\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + currentChat?._id);\n    \n        setMessages(res.data);\n\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async (e) => {\n    console.log(user._id)\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      // conversationId: currentChat._id,\n    };\n\n    const receiverId = currentChat.members.find(\n      (member) => member !== user._id\n    );\n\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage,\n    });\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  return (\n    <>\n      <Topbar />\n      <div className=\"messenger\">\n        <div className=\"chatMenu\">\n          <div className=\"chatMenuWrapper\">\n            <input placeholder=\"Search for friends\" className=\"chatMenuInput\" />\n          {/* conversation */}\n          </div>\n        </div>\n        <div className=\"chatBox\">\n          <div className=\"chatBoxWrapper\">\n            {!currentChat ? (\n              <>\n                <div className=\"chatBoxTop\">\n                  {messages.map((m) => (\n                    <div ref={scrollRef}>\n                      <Message message={m} own={m.sender === user._id} />\n                    </div>\n                  ))}\n                </div>\n                <div className=\"chatBoxBottom\">\n                  <textarea\n                    className=\"chatMessageInput\"\n                    placeholder=\"write something...\"\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    value={newMessage}\n                  ></textarea>\n                  <button className=\"chatSubmitButton\" onClick={handleSubmit}>\n                    Send\n                  </button>\n                </div>\n              </>\n            ) : (\n              <span className=\"noConversationText\">\n                Open a conversation to start a chat.\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"chatOnline\">\n          <div className=\"chatOnlineWrapper\">\n            <ChatOnline\n              onlineUsers={onlineUsers}\n              currentId={user._id}\n              setCurrentChat={setCurrentChat}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}