{"ast":null,"code":"// import \"./messenger.css\";\n// import React, {useState, useEffect} from \"react\";\n// import axios from \"axios\";\n// import Topbar from \"../../components/topbar/Topbar\";\n// import Conversation from \"./../../components/conversations/Conversation\"\n// import Message from './../../components/message/Message'\n// import ChatOnline from  './../../components/chatOnline/ChatOnline'\n// import { useContext } from \"react\";\n// import { AuthContext } from \"../../context/AuthContext\";\n//   export default function Messenger() {\n//     const [conversations,setConversations] = useState([])\n//     const [currentChat,setCurrentChat] = useState(null)\n//     const [messages,setMessages] = useState([])\n//     const [newMessages, setNewMessages] = useState(\"\");\n//     const {user} = useContext(AuthContext);\n//      useEffect(() => {\n//       const getConversations = async () => {\n//         try{\n//           const res = await axios.get(\"/conversations/\" + user._id)\n//         setConversations(res.data)\n//         }catch(err){\n//      console.log(err)\n//         }\n//       }\n//     getConversations()\n//      }, [user._id])\n//      useEffect(() => {\n//       const getMessages = async () => {\n//         try{\n//           const res = await axios.get(\"/messages/\" + currentChat?._id)\n//         setMessages(res.data)\n//         }catch(err){\n//      console.log(err)\n//         }\n//       }\n//     getMessages()\n//      }, [currentChat._id])\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   const message = {\n//     sender : user._id,\n//     text: newMessages,\n//     conversationId : currentChat._id\n//   }\n//   try{\n//    const res = await axios.post (\"/messages\", message);\n//    setMessages(...messages, res.data)\n//   } catch(err){\n//   }\n// }\n//     return (\n//       <>\n//       <Topbar/>\n//       <div className=\"messenger\">\n//         <div className=\"chatMenu\">\n//           <div className=\"chatMenuWrapper\">\n// <input placeholder=\"search for friends\" className=\"chatMenuInput\"/>\n//           {conversations.map((c)=>(\n//             <div onClick={()=>{setCurrentChat(c)}}>\n//           <Conversation conversation={c} currentUser={user}/>\n//           </div>))  \n//           }\n//           </div>\n//         </div>\n//         <div className=\"chatBox\">\n//           <div className=\"chatBoxWrapper\">\n//           {currentChat ? (\n//               <>\n//                 <div className=\"chatBoxTop\">\n//                   {messages.map((m) => (\n//                     <div >\n//                       <Message message={m} own={m.sender === user._id} />\n//                     </div>\n//                   ))}\n//                 </div>\n//                 <div className=\"chatBoxBottom\">\n//                   <textarea\n//                     className=\"chatMessageInput\"\n//                     placeholder=\"write something...\"\n//                     onChange={(e) => setNewMessages(e.target.value)}\n//                     value={newMessages}\n//                   ></textarea>\n//                   <button className=\"chatSubmitButton\" onClick={handleSubmit}>\n//                     Send\n//                   </button>\n//                 </div>\n//               </>\n//             ) : (\n//               <span className=\"noConversationText\">\n//                 Open a conversation to start a chat.\n//               </span>\n//             )}\n//           </div>\n//         </div>\n//         <div className=\"chatOnline\">\n//           <div className=\"chatOnlineWrapper\">\n// <ChatOnline/>\n//           </div>\n//         </div>\n//       </div>\n//       </>\n//     )\n//   }","map":{"version":3,"sources":["/Users/ramya/Desktop/mern-social/client/src/pages/messenger/Messenger.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["// import \"./messenger.css\";\n// import React, {useState, useEffect} from \"react\";\n// import axios from \"axios\";\n// import Topbar from \"../../components/topbar/Topbar\";\n// import Conversation from \"./../../components/conversations/Conversation\"\n// import Message from './../../components/message/Message'\n// import ChatOnline from  './../../components/chatOnline/ChatOnline'\n// import { useContext } from \"react\";\n// import { AuthContext } from \"../../context/AuthContext\";\n//   export default function Messenger() {\n//     const [conversations,setConversations] = useState([])\n//     const [currentChat,setCurrentChat] = useState(null)\n//     const [messages,setMessages] = useState([])\n//     const [newMessages, setNewMessages] = useState(\"\");\n\n\n//     const {user} = useContext(AuthContext);\n\n//      useEffect(() => {\n//       const getConversations = async () => {\n//         try{\n//           const res = await axios.get(\"/conversations/\" + user._id)\n//         setConversations(res.data)\n//         }catch(err){\n//      console.log(err)\n//         }\n       \n//       }\n//     getConversations()\n//      }, [user._id])\n\n\n//      useEffect(() => {\n//       const getMessages = async () => {\n//         try{\n//           const res = await axios.get(\"/messages/\" + currentChat?._id)\n//         setMessages(res.data)\n//         }catch(err){\n//      console.log(err)\n//         }\n//       }\n//     getMessages()\n//      }, [currentChat._id])\n\n    \n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   const message = {\n//     sender : user._id,\n//     text: newMessages,\n//     conversationId : currentChat._id\n\n//   }\n//   try{\n//    const res = await axios.post (\"/messages\", message);\n//    setMessages(...messages, res.data)\n//   } catch(err){\n      \n//   }\n\n// }\n\n\n//     return (\n//       <>\n//       <Topbar/>\n//       <div className=\"messenger\">\n//         <div className=\"chatMenu\">\n//           <div className=\"chatMenuWrapper\">\n// <input placeholder=\"search for friends\" className=\"chatMenuInput\"/>\n          \n//           {conversations.map((c)=>(\n//             <div onClick={()=>{setCurrentChat(c)}}>\n//           <Conversation conversation={c} currentUser={user}/>\n//           </div>))  \n//           }\n//           </div>\n\n//         </div>\n//         <div className=\"chatBox\">\n//           <div className=\"chatBoxWrapper\">\n//           {currentChat ? (\n//               <>\n//                 <div className=\"chatBoxTop\">\n//                   {messages.map((m) => (\n//                     <div >\n//                       <Message message={m} own={m.sender === user._id} />\n//                     </div>\n//                   ))}\n//                 </div>\n//                 <div className=\"chatBoxBottom\">\n//                   <textarea\n//                     className=\"chatMessageInput\"\n//                     placeholder=\"write something...\"\n//                     onChange={(e) => setNewMessages(e.target.value)}\n//                     value={newMessages}\n//                   ></textarea>\n//                   <button className=\"chatSubmitButton\" onClick={handleSubmit}>\n//                     Send\n//                   </button>\n//                 </div>\n//               </>\n//             ) : (\n//               <span className=\"noConversationText\">\n//                 Open a conversation to start a chat.\n//               </span>\n//             )}\n       \n//           </div>\n//         </div>\n\n//         <div className=\"chatOnline\">\n//           <div className=\"chatOnlineWrapper\">\n// <ChatOnline/>\n//           </div>\n//         </div>\n//       </div>\n      \n//       </>\n//     )\n//   }\n  \n"]},"metadata":{},"sourceType":"module"}