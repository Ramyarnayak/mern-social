{"ast":null,"code":"var _jsxFileName = \"/Users/ramya/Desktop/mern-social/client/src/components/chatOnline/ChatOnline.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState, useContext } from \"react\";\nimport \"./chatOnline.css\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Conversation from \"../conversations/Conversation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatOnline({\n  onlineUsers,\n  currentId,\n  setCurrentChat\n}) {\n  _s();\n\n  const [friends, setFriends] = useState([]);\n  const [onlineFriends, setOnlineFriends] = useState([]);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const [conversation, setConversation] = useState([]);\n  const {\n    user\n  } = useContext(AuthContext);\n  const [c, setC] = useState(false);\n  const [conversations, setConversations] = useState([]);\n  useEffect(() => {\n    const getFriends = async () => {\n      try {\n        // alert(user._id)\n        const friendList = await axios.get(\"/users/friends/\" + currentId);\n        setFriends(friendList.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getFriends();\n  }, [currentId]);\n  useEffect(() => {\n    setOnlineFriends(friends.filter(f => onlineUsers.includes(f._id)));\n  }, [friends, onlineUsers]);\n\n  const addnewConversation = async (o, user) => {\n    try {\n      const res = await axios.get(\"/conversations/\" + user._id);\n      setConversations(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n\n    try {\n      conversation.map(c => {\n        if (c.member.senderId !== user._id && c.member.receiverId !== o._id) {\n          const res = axios.post(\"/conversations\", {\n            senderId: user._id,\n            receiverId: o._id\n          });\n          setConversation(...conversation, res.data);\n          alert('j');\n        }\n      });\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const handleClick = async user => {\n    try {\n      const res = await axios.get(`/conversations/find/${currentId}/${user._id}`);\n      setCurrentChat(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatOnline\",\n    children: friends.map(o => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatOnlineFriend\",\n      onClick: () => handleClick(o),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          addnewConversation(o, user);\n          setC(true);\n          setFriends(friends.filter(f => f !== o));\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineImgContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"chatOnlineImg\",\n            src: (o === null || o === void 0 ? void 0 : o.profilePicture) ? PF + o.profilePicture : PF + \"person/noAvatar.png\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatOnlineBadge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chatOnlineName\",\n          children: o === null || o === void 0 ? void 0 : o.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatOnline, \"ahgV8rloKqkPp3Htg9RPYYguK9c=\");\n\n_c = ChatOnline;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatOnline\");","map":{"version":3,"sources":["/Users/ramya/Desktop/mern-social/client/src/components/chatOnline/ChatOnline.jsx"],"names":["axios","useEffect","useState","useContext","AuthContext","Conversation","ChatOnline","onlineUsers","currentId","setCurrentChat","friends","setFriends","onlineFriends","setOnlineFriends","PF","process","env","REACT_APP_PUBLIC_FOLDER","conversation","setConversation","user","c","setC","conversations","setConversations","getFriends","friendList","get","data","err","console","log","filter","f","includes","_id","addnewConversation","o","res","map","member","senderId","receiverId","post","alert","handleClick","profilePicture","username"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState, useContext } from \"react\";\nimport \"./chatOnline.css\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Conversation from \"../conversations/Conversation\";\nexport default function ChatOnline({ onlineUsers, currentId, setCurrentChat }) {\n  const [friends, setFriends] = useState([]);\n  const [onlineFriends, setOnlineFriends] = useState([]);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\nconst [ conversation, setConversation] = useState([])\nconst { user } = useContext(AuthContext);\nconst [ c, setC] = useState(false)\nconst [ conversations, setConversations] = useState([])\n\nuseEffect(() => {\n    const getFriends = async () => {\n    try {\n      // alert(user._id)\n      const friendList = await axios.get(\"/users/friends/\" + currentId);\n      setFriends(friendList.data);\n     \n\n    } catch (err) {\n\n      console.log(err);\n    }\n  }\n    getFriends();\n  }, [currentId]);\n\n  useEffect(() => {\n    setOnlineFriends(friends.filter((f) => onlineUsers.includes(f._id)));\n  }, [friends, onlineUsers]);\n\n  const   addnewConversation= async (o, user)=>{\n    try {\n      const res = await axios.get(\"/conversations/\" + user._id);\n      setConversations(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n    try{ \n      conversation.map((c)=>{\n        if(c.member.senderId !== user._id && c.member.receiverId !== o._id){\n          const res =  axios.post(\"/conversations\", {\n            senderId: user._id,\n            receiverId : o._id\n          })\n     setConversation(...conversation, res.data)\n     alert('j')\n        }\n      })\n\n\n    }catch(err){\n      alert(err)\n    }\n  }\n\n  const handleClick = async (user) => {\n    try {\n      const res = await axios.get(\n        `/conversations/find/${currentId}/${user._id}`\n      );\n      setCurrentChat(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"chatOnline\">\n      {friends.map((o) => (\n        <div className=\"chatOnlineFriend\" onClick={() => handleClick(o)}>\n          <div  onClick={()=>\n            { \n              addnewConversation(o, user)\n              setC(true)\n              setFriends(friends.filter((f)=> f!==o))\n            }}>\n          <div className=\"chatOnlineImgContainer\" \n         \n            >\n            <img\n              className=\"chatOnlineImg\"\n              src={\n                o?.profilePicture\n                  ? PF + o.profilePicture\n                  : PF + \"person/noAvatar.png\"\n              }\n              alt=\"\"\n            />\n            <div className=\"chatOnlineBadge\"></div>\n          </div>\n          <span className=\"chatOnlineName\" >{o?.username}</span>\n          </div>  \n        </div>\n      ))}\n     \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}