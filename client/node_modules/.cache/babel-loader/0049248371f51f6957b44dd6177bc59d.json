{"ast":null,"code":"var _jsxFileName = \"/Users/ramya/Desktop/mern-social/client/src/pages/Covid/components/inputs/TextInput.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // Libraries\n\nimport { TextField, MenuItem, makeStyles } from '@material-ui/core'; // Hooks\n\nimport useSwitch from './../../hooks/useSwitch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomTextField = ({\n  value,\n  onChange,\n  required = false,\n  multiline = false,\n  select = false,\n  errorText = 'Required Field',\n  validationError = 'Invalid Field',\n  validationRegex,\n  className,\n  options,\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const [error, open, close] = useSwitch(false);\n  const [errorMessage, setErrorMessage] = React.useState(errorText);\n  const isValid = validationRegex === null || validationRegex === void 0 ? void 0 : validationRegex.test(String(value).toLowerCase());\n  const classes = useStyles();\n\n  const handleOnBlur = event => {\n    if (required && event.target.value === '') open();\n    if (required && event.target.value === undefined) open();else if (!(validationRegex === null || validationRegex === void 0 ? void 0 : validationRegex.test(String(value).toLowerCase()))) {\n      setErrorMessage(validationError);\n      open();\n    } else {\n      setErrorMessage(errorText);\n      close();\n    }\n  };\n\n  React.useEffect(() => {\n    if (value !== '' && isValid) close();\n    if (value !== '' && !validationRegex) close();\n  }, [value, close, isValid, open, validationRegex]);\n  const inputProps = {\n    value,\n    onChange,\n    onBlur: handleOnBlur,\n    error,\n    required,\n    helperText: error && errorMessage,\n    rows: 4,\n    multiline,\n    fullWidth: true,\n    select,\n    className: `${classes.textField} ${className}`,\n    ...rest\n  };\n  return select ? /*#__PURE__*/_jsxDEV(TextField, { ...inputProps,\n    children: options ? options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: option.value,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(TextField, { ...inputProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomTextField, \"F2rWLTbxJWOyAJgVsdmb2TSAUcc=\", false, function () {\n  return [useSwitch, useStyles];\n});\n\n_c = CustomTextField;\nexport default CustomTextField;\nconst useStyles = makeStyles(() => ({\n  textField: {\n    margin: '10px'\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTextField\");","map":{"version":3,"sources":["/Users/ramya/Desktop/mern-social/client/src/pages/Covid/components/inputs/TextInput.js"],"names":["React","TextField","MenuItem","makeStyles","useSwitch","CustomTextField","value","onChange","required","multiline","select","errorText","validationError","validationRegex","className","options","children","rest","error","open","close","errorMessage","setErrorMessage","useState","isValid","test","String","toLowerCase","classes","useStyles","handleOnBlur","event","target","undefined","useEffect","inputProps","onBlur","helperText","rows","fullWidth","textField","map","option","label","margin"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// Libraries\nimport { TextField, MenuItem, makeStyles } from '@material-ui/core';\n\n// Hooks\nimport useSwitch from './../../hooks/useSwitch'\n\nconst CustomTextField = ({\n  value,\n  onChange,\n  required = false,\n  multiline = false,\n  select = false,\n  errorText = 'Required Field',\n  validationError = 'Invalid Field',\n  validationRegex,\n  className,\n  options,\n  children,\n  ...rest\n}) => {\n  const [error, open, close] = useSwitch(false);\n  const [errorMessage, setErrorMessage] = React.useState(errorText);\n\n  const isValid = validationRegex?.test(String(value).toLowerCase());\n  const classes = useStyles();\n\n  const handleOnBlur = (event) => {\n    if (required && event.target.value === '') open();\n    if (required && event.target.value === undefined) open();\n    else if (!validationRegex?.test(String(value).toLowerCase())) {\n      setErrorMessage(validationError);\n      open();\n    } else {\n      setErrorMessage(errorText);\n      close();\n    }\n  };\n\n  React.useEffect(() => {\n    if (value !== '' && isValid) close();\n    if (value !== '' && !validationRegex) close();\n  }, [value, close, isValid, open, validationRegex]);\n\n  const inputProps = {\n    value,\n    onChange,\n    onBlur: handleOnBlur,\n    error,\n    required,\n    helperText: error && errorMessage,\n    rows: 4,\n    multiline,\n    fullWidth: true,\n    select,\n    className: `${classes.textField} ${className}`,\n    ...rest,\n  };\n\n  return select ? (\n    <TextField {...inputProps}>\n      {options\n        ? options.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))\n        : children}\n    </TextField>\n  ) : (\n    <TextField {...inputProps} />\n  );\n};\n\nexport default CustomTextField;\n\nconst useStyles = makeStyles(() => ({\n  textField: {\n    margin: '10px',\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}