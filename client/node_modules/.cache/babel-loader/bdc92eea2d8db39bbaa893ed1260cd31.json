{"ast":null,"code":"var _jsxFileName = \"/Users/ramya/Desktop/mern-social/client/src/components/chatOnline/ChatOnline.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState, useContext } from \"react\";\nimport \"./chatOnline.css\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Conversation from \"../conversations/Conversation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatOnline({\n  onlineUsers,\n  currentId,\n  setCurrentChat\n}) {\n  _s();\n\n  const [friends, setFriends] = useState([]);\n  const [onlineFriends, setOnlineFriends] = useState([]);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const [conversation, setConversation] = useState(false);\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const getFriends = async () => {\n      try {\n        // alert(user._id)\n        const friendList = await axios.get(\"/users/friends/\" + currentId);\n        setFriends(friendList.data);\n        console.log(friendList.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getFriends();\n  }, [currentId]);\n  useEffect(() => {\n    setOnlineFriends(friends.filter(f => onlineUsers.includes(f._id)));\n  }, [friends, onlineUsers]);\n\n  const handleClick = async user => {\n    try {\n      const res = await axios.get(`/conversations/find/${currentId}/${user._id}`);\n      setCurrentChat(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatOnline\",\n    children: friends.map(o => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatOnlineFriend\",\n      onClick: () => handleClick(o),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnlineImgContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"chatOnlineImg\",\n          src: (o === null || o === void 0 ? void 0 : o.profilePicture) ? PF + o.profilePicture : PF + \"person/noAvatar.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineBadge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chatOnlineName\",\n        onClick: () => setConversation(true),\n        children: o === null || o === void 0 ? void 0 : o.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), conversation && /*#__PURE__*/_jsxDEV(Conversation, {\n        currentUser: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatOnline, \"rpuuVs14PDjPXo729djfNJSieMw=\");\n\n_c = ChatOnline;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatOnline\");","map":{"version":3,"sources":["/Users/ramya/Desktop/mern-social/client/src/components/chatOnline/ChatOnline.jsx"],"names":["axios","useEffect","useState","useContext","AuthContext","Conversation","ChatOnline","onlineUsers","currentId","setCurrentChat","friends","setFriends","onlineFriends","setOnlineFriends","PF","process","env","REACT_APP_PUBLIC_FOLDER","conversation","setConversation","user","getFriends","friendList","get","data","console","log","err","filter","f","includes","_id","handleClick","res","map","o","profilePicture","username"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState, useContext } from \"react\";\nimport \"./chatOnline.css\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Conversation from \"../conversations/Conversation\";\nexport default function ChatOnline({ onlineUsers, currentId, setCurrentChat }) {\n  const [friends, setFriends] = useState([]);\n  const [onlineFriends, setOnlineFriends] = useState([]);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\nconst [ conversation, setConversation] = useState(false)\nconst { user } = useContext(AuthContext);\n\n\nuseEffect(() => {\n    const getFriends = async () => {\n    try {\n      // alert(user._id)\n      const friendList = await axios.get(\"/users/friends/\" + currentId);\n      setFriends(friendList.data);\n      console.log(friendList.data)\n\n    } catch (err) {\n\n      console.log(err);\n    }\n  }\n    getFriends();\n  }, [currentId]);\n\n  useEffect(() => {\n    setOnlineFriends(friends.filter((f) => onlineUsers.includes(f._id)));\n  }, [friends, onlineUsers]);\n\n  const handleClick = async (user) => {\n    try {\n      const res = await axios.get(\n        `/conversations/find/${currentId}/${user._id}`\n      );\n      setCurrentChat(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"chatOnline\">\n      {friends.map((o) => (\n        <div className=\"chatOnlineFriend\" onClick={() => handleClick(o)}>\n          <div className=\"chatOnlineImgContainer\">\n            <img\n              className=\"chatOnlineImg\"\n              src={\n                o?.profilePicture\n                  ? PF + o.profilePicture\n                  : PF + \"person/noAvatar.png\"\n              }\n              alt=\"\"\n            />\n            <div className=\"chatOnlineBadge\"></div>\n          </div>\n          <span className=\"chatOnlineName\" onClick={()=>setConversation(true)}>{o?.username}</span>\n          {\n            conversation &&  <Conversation  currentUser={user} />\n          }\n        </div>\n      ))}\n     \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}